ServerOptions.new.outDevice = "複数";
s = Server.default;
s.boot;


// Geidai Interactive Music II 141211

// Simple Enveloped Sinwave
SynthDef("test_inst",{
    arg freq=440, length=1.0, amp=0.5;
    var env, out;
    env = Env.perc(0.01, length);
    out = SinOsc.ar([freq,freq*1.001])
    * EnvGen.kr(env, doneAction:2) * amp;
    Out.ar(0, out);
}).store;

//FM
SynthDef("fm1", { arg freq = 440, detune = 2, carPartial = 1, modPartial = 1, index = 3, mul = 0.2, pan=0.0, amp=0.5;
    var mod, car;
    mod = SinOsc.ar([freq, freq+detune] * modPartial,
                    0,
                    freq * index * LFNoise1.kr(10.reciprocal).abs);
    car = Pan2.ar(SinOsc.ar((freq * carPartial) + mod, 0, mul), pan, amp);
    Out.ar(0, car);
}).add;

// Saw wave
SynthDef("mySaw", {
    arg fadeTime = 10, n = 0, rq = 0.3, detune = 0.001, base = 20, ratio = 1.5, harm = 1.5, amp = 0.2, gate=0;
    var lfo, env, out;
    env = EnvGen.kr(Env.new([0,1], [fadeTime], 'sine'));
    lfo = SinOsc.ar(rrand(0.03, 0.05), 0, 100, 600);
    out = Saw.ar([base+detune.rand, base+detune.rand] * (ratio ** n)) * amp
    + Saw.ar([base*harm+detune.rand, base*harm+detune.rand] * (ratio ** n)) * amp;
    out = out * env;
    out = RLPF.ar(out, lfo * (1.5 ** n), rq).clip2 * 0.5;
    out = out * EnvGen.kr(Env.adsr(releaseTime:20), gate, doneAction: 2);
    Out.ar(0, out);
}).store;

// Effect
SynthDef("fx", {
    arg lpf=440, rq=0.5, amp=0.8;
    var in, out;
    in = In.ar(0, 2);
    12.do({ in = AllpassL.ar(in, 0.1, LFNoise2.kr([rrand(0.0, 0.1),rrand(0.0, 0.1)],0.01,0.06), 4.0) });
    out = CompanderD.ar(in) * amp;
    ReplaceOut.ar(0, out);
}).store;
